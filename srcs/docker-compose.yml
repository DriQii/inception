
services:
  server :
    env_file:
    - .env
    build: ./requirements/nginx
    ports :
    - 443:443
    image : serv_img
    container_name : serv_ctnr
    stdin_open : true
    tty : true
    depends_on :
     - website
    volumes :
      - ./requirements/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./requirements/nginx/nginx.key:/ssl/nginx.key
      - ./requirements/nginx/nginx.crt:/ssl/nginx.crt
      - web_vol:/serv
    networks :
      - network_1
    restart : always


  database:
    env_file:
    - .env
    build: ./requirements/mariadb
    image: db_img
    container_name : db_ctnr
    stdin_open : true
    tty : true
    environment:
    - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    - MYSQL_USER=${MYSQL_USER}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes :
      - ./requirements/mariadb/my.cnf:/etc/mysql/mariadb.conf.d/99-bind.cnf
      - ./requirements/mariadb/init.sh:/usr/local/bin/init.sh
      - db_vol:/var/lib/mysql
    networks :
      - network_1
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart : always


  website:
    env_file:
    - .env
    build: ./requirements/wordpress
    image: site_img
    container_name : site_ctnr
    stdin_open : true
    tty : true
    volumes :
      - ./requirements/wordpress/wp-config.php:/website/wp-config.php
      - ./requirements/wordpress/www.conf:/etc/php/7.4/fpm/pool.d/www.conf
      - ./requirements/wordpress/init.sh:/usr/local/bin/init.sh
      - web_vol:/website
    depends_on :
     database :
      condition : service_healthy
    networks :
      - network_1


volumes :
  db_vol:
    driver: local
    driver_opts:
      type: none
      device: ${HOME}/data/db_vol
      o: bind
  web_vol:
    driver: local
    driver_opts:
      type: none
      device: ${HOME}/data/web_vol
      o: bind

networks :
  network_1:
    driver : bridge

